/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.DatosEditor.Docencia;

import data.DataKairos;
import data.DataProyectoListener;
import data.profesores.TreeCellRendererProfesores;
import data.profesores.TreeModelProfesores;
import gui.AbstractMainWindow;
import gui.DatosEditor.Asignaturas.TreeCellRendererAsignaturas;
import gui.DatosEditor.Asignaturas.TreeModelAsignaturas;
import gui.DatosEditor.DataGUIInterface;
import gui.TreeAsignaturas;
import java.awt.dnd.DropTarget;
import java.util.TooManyListenersException;
import javax.swing.JTree;

/**
 *
 * @author David Guti√©rrez Rubio <davidgutierrezrubio@gmail.com>
 */
public class JIntEditorDocencia extends javax.swing.JInternalFrame implements DataGUIInterface, DataProyectoListener, TreeAsignaturas, TreeProfesores {

    private final DataKairos dk;
    private AbstractMainWindow mainWindow;

    /**
     * Creates new form jIntAsignaciones
     *
     * @param dk
     * @throws java.util.TooManyListenersException
     */
    public JIntEditorDocencia(DataKairos dk) throws TooManyListenersException {
        initComponents();
        this.dk = dk;
        TreeModelProfesores mod = new TreeModelProfesores(dk);
        jTreeProfesores.setModel(mod);
        final TreeCellRendererProfesores rendProf = new TreeCellRendererProfesores(dk);
        rendProf.setMostrarHorasDocencia(true);
        jTreeProfesores.setCellRenderer(rendProf);
        jTreeProfesores.setTransferHandler(new JTreeProfesoresTransferHandler());
        jTreeProfesores.setDragEnabled(true);
        jTreeProfesores.setDropTarget(new DropTarget());
        jTreeProfesores.getDropTarget().addDropTargetListener(new JTreeProfesoresDropListener((TreeProfesores) this, dk));

        TreeModelAsignaturas asigModel = new TreeModelAsignaturas(dk);
        asigModel.setLlegarHastaTramos(true);
        jTreeAsignaturas.setModel(asigModel);
        jTreeAsignaturas.setCellRenderer(new TreeCellRendererAsignaturas(dk));
        jTreeAsignaturas.setTransferHandler(new JTreeAsignaturasTransferHandler());
        jTreeAsignaturas.setDragEnabled(true);
        jTreeAsignaturas.setDropTarget(new DropTarget());
        jTreeAsignaturas.getDropTarget().addDropTargetListener(new JTreeAsignaturasDropListener((TreeAsignaturas) this, dk));
    }

    /**
     *
     * @return
     */
    @Override
    public JTree getjTreeAsignaturas() {
        return jTreeAsignaturas;
    }

    /**
     *
     * @return
     */
    public JTree getjTreeProfesores() {
        return jTreeProfesores;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButExpandir = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTreeProfesores = new javax.swing.JTree();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeAsignaturas = new javax.swing.JTree();

        setResizable(true);
        getContentPane().setLayout(new java.awt.BorderLayout(5, 0));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButExpandir.setText("Expandir");
        jButExpandir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButExpandirActionPerformed(evt);
            }
        });
        jPanel1.add(jButExpandir);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(filler1, java.awt.BorderLayout.LINE_END);
        getContentPane().add(filler2, java.awt.BorderLayout.LINE_END);

        jSplitPane1.setDividerLocation(300);

        jTreeProfesores.setMaximumSize(new java.awt.Dimension(30000, 300000));
        jTreeProfesores.setMinimumSize(new java.awt.Dimension(400, 200));
        jTreeProfesores.setPreferredSize(new java.awt.Dimension(400, 200));
        jScrollPane2.setViewportView(jTreeProfesores);

        jSplitPane1.setLeftComponent(jScrollPane2);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTreeAsignaturas);

        jSplitPane1.setRightComponent(jScrollPane1);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButExpandirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButExpandirActionPerformed
      expandTrees();


    }//GEN-LAST:event_jButExpandirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButExpandir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTreeAsignaturas;
    private javax.swing.JTree jTreeProfesores;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateData() {
        jTreeProfesores.updateUI();
        jTreeAsignaturas.updateUI();
    }

    @Override
    public void setMainWindow(AbstractMainWindow mainWindow) {
        this.mainWindow = mainWindow;
    }

    @Override
    public void dataEvent(Object obj, int type) {
        jTreeAsignaturas.updateUI();
        jTreeProfesores.updateUI();
    }

    @Override
    public void expandTrees() {
        for (int i = 0; i < jTreeAsignaturas.getRowCount(); i++) {
            jTreeAsignaturas.expandRow(i);
        }
        for (int i = 0; i < jTreeProfesores.getRowCount(); i++) {
            jTreeProfesores.expandRow(i);
        }
    }
}
